<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<instance>
		<iname>ptrb1</iname>
		<fname>PTRB1 - Report</fname>
		<port>1321</port>
		<hostname>svora01a-scan</hostname>
		<username>user03332</username>
		<password>pxmFolz1lFyCv4mqTGcDMQ==</password>
		<mailto>igorlf@gmail.com</mailto>
		<mailhost>19.11.44.32</mailhost>
		<report>
			<title>N0N3</title>
			<query>select instance_name,host_name,version,startup_time,SYSDATE from gv$instance</query>
			<colnames>instance_name,host_name,version,startup_time,date</colnames>
			<dayofweek>Everyday</dayofweek>
		</report>
		<report>
			<title>Memory and Process</title>
			<query>select s.inst_id,decode(s.username,null,&#39;Background Service&#39;,s.program) PROGRAM,decode(s.username, null,&#39;oracle internal&#39;,s.username) Username, round(sum(p.pga_used_mem/1024/1024),2) Used_PGA,round(sum(p.pga_max_mem/1024/1024),2) Max_PGA,COUNT(*) SESSION# from gv$session s,gv$process p where s.inst_id=p.inst_id and s.paddr=p.addr and s.inst_id=p.inst_id group by s.inst_id,S.USERNAME,decode(s.username,null,&#39;Background Service&#39;,s.program) order by 3,round(sum(p.pga_used_mem/1024/1024),2) desc</query>
			<colnames>inst_id,program,username,Used_PGA,Max_PGA,Session Number</colnames>
			<dayofweek>Everyday</dayofweek>
		</report>
		<report>
			<title>Sessions with more than 20MB PGA</title>
			<query>select s.username,s.status,p.program,p.pga_used_mem/1024/1024,p.pga_alloc_mem/1024/1024,p.pga_max_mem/1024/1024 from gv$process p,gv$session s where p.addr=s.paddr and p.inst_id=s.inst_id and p.pga_used_mem/1024/1024&#62;20 order by 5 desc,4 desc,6 desc</query>
			<colnames>USERNAME,STATUS,PGA USED,PGA ALLOCATED,MAX PGA</colnames>
			<dayofweek>Everyday</dayofweek>
		</report>
		<report>
			<title>Session Status</title>
			<query>select s.inst_id,s.username,s.status,count(1) SESSION# from gv$session s,gv$process p where s.inst_id=p.inst_id and s.paddr=p.addr and s.username is not null group by s.inst_id,s.username,s.status</query>
			<colnames>inst_id,username,status,session number</colnames>
			<dayofweek>Everyday</dayofweek>
		</report>
		<report>
			<title>Tablespace Status</title>
			<query>select df.tablespace_name,totalusedspace,(df.totalspace - tu.totalusedspace),round(100 * ( (df.totalspace - tu.totalusedspace)/ df.totalspace)) from (select tablespace_name,round(sum(bytes) / 1048576) TotalSpace from dba_data_files  group by tablespace_name) df,(select round(sum(bytes)/(1024*1024)) totalusedspace, tablespace_name from dba_segments  group by tablespace_name) tu where df.tablespace_name = tu.tablespace_name  ORDER BY 4</query>
			<colnames>Tablespace Name,Total Space(MB),Free Space(MB),% Free</colnames>
			<dayofweek>Friday</dayofweek>
		</report>
		<report>
			<title>Object Status</title>
			<query>select OWNER,OBJECT_NAME from dba_objects where status!=&#39;VALID&#39; UNION ALL SELECT DISTINCT &#39;NO INVALID OBJECT&#39;,NULL FROM DBA_OBJECTS</query>
			<colnames>OWNER,OBJECT_NAME</colnames>
			<dayofweek>Everyday</dayofweek>
		</report>
		<report>
			<title>Redo Log Switch</title>
			<query>SELECT to_char(first_time,&#39;dd-MON-yyyy&#39;) day,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;00&#39;,1,0)),&#39;99&#39;) &#34;00&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;01&#39;,1,0)),&#39;99&#39;) &#34;01&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;02&#39;,1,0)),&#39;99&#39;) &#34;02&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;03&#39;,1,0)),&#39;99&#39;) &#34;03&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;04&#39;,1,0)),&#39;99&#39;) &#34;04&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;05&#39;,1,0)),&#39;99&#39;) &#34;05&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;06&#39;,1,0)),&#39;99&#39;) &#34;06&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;07&#39;,1,0)),&#39;99&#39;) &#34;07&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;08&#39;,1,0)),&#39;99&#39;) &#34;0&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;09&#39;,1,0)),&#39;99&#39;) &#34;09&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;10&#39;,1,0)),&#39;99&#39;) &#34;10&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;11&#39;,1,0)),&#39;99&#39;) &#34;11&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;12&#39;,1,0)),&#39;99&#39;) &#34;12&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;13&#39;,1,0)),&#39;99&#39;) &#34;13&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;14&#39;,1,0)),&#39;99&#39;) &#34;14&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;15&#39;,1,0)),&#39;99&#39;) &#34;15&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;16&#39;,1,0)),&#39;99&#39;) &#34;16&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;17&#39;,1,0)),&#39;99&#39;) &#34;17&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;18&#39;,1,0)),&#39;99&#39;) &#34;18&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;19&#39;,1,0)),&#39;99&#39;) &#34;19&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;20&#39;,1,0)),&#39;99&#39;) &#34;20&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;21&#39;,1,0)),&#39;99&#39;) &#34;21&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;22&#39;,1,0)),&#39;99&#39;) &#34;22&#34;,to_char(sum(decode(to_char(first_time,&#39;HH24&#39;),&#39;23&#39;,1,0)),&#39;99&#39;) &#34;23&#34; from v$log_history where to_char(first_time,&#39;MON&#39;)=to_char(sysdate,&#39;MON&#39;) GROUP by to_char(first_time,&#39;dd-MON-yyyy&#39;) order by 1</query>
			<colnames>Day,00,01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,21,22,23</colnames>
			<dayofweek>Everyday</dayofweek>
		</report>
		<report>
			<title>Backup Report</title>
			<query>select distinct DECODE(INCREMENTAL_LEVEL, 1, &#39;INCREMENTAL&#39;, 0,&#39;FULL&#39;) &#34;BACKUP_TYPE&#34;,b.OUTPUT_BYTES_DISPLAY,to_char(b.START_TIME,&#39;yyyy-mm-dd hh24:mi&#39;) start_time,to_char(b.end_time, &#39;yyyy-mm-dd hh24:mi&#39;) END_TIME, status from V$RMAN_BACKUP_JOB_DETAILS b,V$BACKUP_SET s where trunc(s.START_TIME)=trunc(b.START_TIME) and s.incremental_level is not null and b.input_type=&#39;DB INCR&#39; and b.start_time > trunc(sysdate-2)</query>
			<colnames>BACKUP_TYPE,OUTPUT_BYTES_DISPLAY,START_TIME,END_TIME,STATUS</colnames>
			<dayofweek>Everyday</dayofweek>
		</report>
		<report>
			<title>FRA Status</title>
			<query>SELECT name,round(space_limit/1024/1024/1024,2) TOTAL,round(space_used/1024/1024/1024,2) USED,round(space_used/space_limit*100,2) &#34;%Used&#34;,number_of_files FROM V$RECOVERY_FILE_DEST</query>
			<colnames>NAME,TOTAL SPACE(GB),USED SPACE(GB),% USED</colnames>
			<dayofweek>Sunday</dayofweek>
		</report>
		<report>
			<title>N0N3</title>
			<query>SELECT FILE_TYPE,PERCENT_SPACE_USED,PERCENT_SPACE_RECLAIMABLE,NUMBER_OF_FILES FROM V$RECOVERY_AREA_USAGE</query>
			<colnames>FILE_TYPE,PERCENT_SPACE_USED,PERCENT_SPACE_RECLAIMABLE,NUMBER_OF_FILES</colnames>
			<dayofweek>Everyday</dayofweek>
		</report>
</instance>